const { VanillaExtractPlugin } = require('@vanilla-extract/webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

module.exports = {
    // ...
    entry: './src/index.js', // 入口文件，假设你的 react 组件在 src/index.js 中
    output: {
        path: __dirname + '/dist', // 输出目录
        filename: 'bundle.js', // 输出文件名
    },
    resolve: {
        extensions: ['.js', '.jsx', '.json']
    },
    module: {
        rules: [
            {
                test: /\.jsx?$/, // 匹配 js 或 jsx 文件
                exclude: /node_modules/, // 排除 node_modules 目录
                use: [{
                    loader: 'babel-loader', // 使用 babel-loader 转换 react 代码
                    options: {
                        presets: ['@babel/preset-react'], // 使用 react 预设
                    },
                }],
            }, {
                test: /\.vanilla\.css$/i, // Targets only CSS files generated by vanilla-extract
                use: [
                    MiniCssExtractPlugin.loader,
                    {
                        loader: require.resolve('css-loader'),
                        options: {
                            url: false // Required as image imports should be handled via JS/TS import statements
                        }
                    }
                ]
            }
        ],
    },
    plugins: [
        // Add the plugin to your webpack config
        new VanillaExtractPlugin(), new MiniCssExtractPlugin()
        ,
        new HtmlWebpackPlugin({
            // 使用 html-webpack-plugin 自动生成 html 文件
            template: './src/index.html', // 指定模板文件，假设你的模板在 src/index.html 中
            filename: 'index.html', // 指定输出文件名
        }),
    ],
    devServer: {
        // 使用 devServer 启动一个开发服务器
        contentBase: './dist', // 指定静态资源目录
        port: 8080, // 指定端口号，默认是 8080
        open: true, // 自动打开浏览器
    },
};
